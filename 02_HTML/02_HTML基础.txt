1：客户端与服务端
	客户端：能够解析客户端语言(HTML/CSS/脚本(javaScript/vbScript))的终端平台就是一个客户端。

		WEB中常见的客户端为浏览器(Borswer)

	
	服务端：能够对客户端提交的数据进行处理并且响应数据的服务平台就一个服务端(Server)









2：HTML
	HTML：Hyper Text Marker Language
	超文本标记语言，是组成网页的最直接文件格式。




3：DreamWeaver的操作



4：HTML的组成部分：
	
	DTD：文档类型验证。用于验证HTML中的标记是否合法。

	头部：网页的元数据、标题、CSS、网页脚本语言。

	<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
	
	<title>无标题文档</title>
	
	<style type="text/css"></style>
	
	<script language="javascript"></script>





	
	指实页面的样式与编码。
	<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />


	网页中的关键字，用于搜索引擎
	<meta name="keywords" content="Java,C#" />

	刷新自身与跳转页
	<meta http-equiv="refresh" content="3;URL=01.html" />
	<meta http-equiv="refresh" content="3" />
	
	//清缓存
	<meta http-equiv="pragma" content="no-cache">
	<meta http-equiv="cache-control" content="no-cache">
	<meta http-equiv="expires" content="0">   

Body：HTML中网页内容显示的区域


	标记(元素)：<table></table>这样的语法结构就是一个HTML元素。

	属性：<table border="1" width="500"></table>  border /width就是table元素的属性。




	文本标记 b i 上标、下标、下划线。
	标题标记：H1
	换行标记
		段落Shift+Enter
		换行Enter
	水平线
	预先格式化。<pre>

	字体标签<font>

	转义字符：转义符号 &

	块标记
		<span></span>：信息块。块中有内容时，会自动显示。适用场合：页面中的信息提示。
		<div></div>：比Span的功能强大。

		span只能够放文本数据，而div可以放更多的HTML元素的内容。



	图像：
		路径：
			相对路径：../   往上一层。
			绝对路径：

	
超链接
	<a href="" target="" name="">
		href：链接的路径。
		target：
			_self：自身打开。
			_blank：弹出一个新的窗口
			_top：在最顶层打开。
			_parent：

			通过框架的名称打开：
	仅限于文本与图像的处理。

	其它HTML元素要实现链接的效果，必须使用脚本控制的方式。


		name：锚点。
			定位到本页面    #锚点名称
			定位到其它页面。XX.html#锚点名称
	
列表类型
	有序
	无序


表格
	Table：表格
	TR     行
	TD     列
	TH     块。
	id


	<thead>表头</thead>
	<tbody>表体</tbody>
	<tfoot>表尾</tfoot>

	列的合并与行的合并。
	
	表格的嵌套。表格只能嵌套在td中。不能嵌套在TR中。

tr：
	id：
	bgcolor：


表单：
	作用：将客户端的数据提交到服务端做处理。

	客户提交的数据必须放在表单里面。表单通过提交按纽来提交数据。





	<form name="" method="" action="" enctype=""></form>

	name：表单的名称。	服务端通过name来获取客户端的控件
	
	
	id：表单的名称。	客户端通过ID来获取客户端的控件。



	method get|post
		get：将数据直接赋在地址栏后面。
		http://10.0.0.10/portal/form_2.html?username=admin&password=admin	

		适用于少量的数据，并且不需要安全的数据。

		post：将数据封装成一个数据包，安全比GET安全。

		传递的数据量较大。

		http://www.baidu.com/s?wd=%C4%E3%BA%C3

		http://www.google.com.hk/search?hl=zh-CN&q=%E4%BD%A0%E5%A5%BD


	action：
		提交的路径。
		save.jsp

	
	enctype="application/x-www-form-urlencoded" 对表单的数据进行编码加密。默认

		此种方式，表单传递到服务端的数据全部都是数据包的数据。

		multipart/form-data：用于表单提交二进制流的数据。文件/图片的上传。



表单控件的属性与名称。

	input

	select

	radio

	checkbox

	textarea

	file





初始值：
	input			vlaue

	select			selected

	radio			checked

	checkbox		checked

	textarea		元素之间值
	

readonly
	控件只读，服务端仍可以获取控件中的数据

disabled

	控件禁用，服务端不可以获取控件中的数据










框架：Frame
	组织系统的布局。

	从上到下，从左到右的方式进行组织。

	内嵌框架:innerFrame
	
	iframe：
		页面中嵌入框架。